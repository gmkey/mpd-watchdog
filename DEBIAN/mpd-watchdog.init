#!/bin/sh
### BEGIN INIT INFO
# Provides:          mpd-watchdog
# Required-Start:    $network $local_fs
# Required-Stop:     $network $local_fs
# Should-Start:      mpd mopidy
# Should-Stop:       mpd mopidy
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Music player daemon (MPD/Mopidy) watchdog
# Description:       Monitor a music player daemon (MPD/Mopidy) while
#                    playing internet streams

### END INIT INFO

PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Watchdog for Music Player Daemon (MPD/Mopidy)"
NAME=mpd-watchdog
DAEMON=/usr/bin/mpd-watchdog
DAEMON_ARGS="-s"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

# Exit if the package is not installed
[ -x $DAEMON ] || exit 0

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
. /lib/lsb/init-functions

do_start()
{
    start-stop-daemon --start --quiet --name $NAME --pidfile $PIDFILE \
        --startas $DAEMON --test > /dev/null \
        || return 1
    start-stop-daemon --start --quiet --name $NAME --pidfile $PIDFILE \
        --background --make-pidfile --startas $DAEMON -- $DAEMON_ARGS \
        || return 2
}

do_stop()
{
    start-stop-daemon --stop --quiet --name $NAME --pidfile $PIDFILE \
        --retry=TERM/30/KILL/5
    RETVAL="$?"
    [ "$RETVAL" = 2 ] && return 2
    rm -f $PIDFILE
    return "$RETVAL"
}

case "$1" in
    start)
        [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC " "$NAME"
        do_start
        case "$?" in
	    0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
	    2)   [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
        ;;
    stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
	    0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
	    2)   [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
    status)
        status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
        ;;
    restart|force-reload)
	log_daemon_msg "Restarting $DESC" "$NAME"
	do_stop
	case "$?" in
	    0|1)
		do_start
		case "$?" in
		    0) log_end_msg 0 ;;
		    1) log_end_msg 1 ;; # Old process is still running
		    *) log_end_msg 1 ;; # Failed to start
		esac
		;;
	    *)
	  	# Failed to stop
		log_end_msg 1
		;;
	esac
	;;
    *)
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
	;;
esac

:
